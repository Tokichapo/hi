# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/pipeline/#customization
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
  - build
  - test
  - deploy

# Include GitLab's pre-built SAST scanning template
include:
  - template: Security/SAST.gitlab-ci.yml

# Global setup (this runs before each job)
before_script:
  - echo "Running common setup steps for all jobs"

# Build Job (runs for all branches and PRs)
build:
  stage: build
  script:
    - echo "Building project for branch $CI_COMMIT_REF_NAME"

  only:
    - branches
    - merge_requests  # This ensures the build job runs for all branches and MR events

# Test Job (runs for all branches and PRs)
test:
  stage: test
  script:
    - echo "Running tests for branch $CI_COMMIT_REF_NAME"
    
  only:
    - branches
    - merge_requests  # This ensures the test job runs for all branches and MR events

# Deploy Job (runs for all branches and PRs)
deploy:
  stage: deploy
  script:
    - echo "Deploying project for branch $CI_COMMIT_REF_NAME"
    
  only:
    - branches
    - merge_requests  # This ensures the deploy job runs for all branches and MR events

# Optional: Cleanup after all jobs are complete
after_script:
  - echo "Running cleanup tasks"
  
